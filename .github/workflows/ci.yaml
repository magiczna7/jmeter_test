name: Run JMeter Tests and Deploy to GitHub Pages

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:
    inputs:
      test-folder:
        description: 'Folder containing test plans to execute (e.g., test_plans/folder1)'
        required: false
        default: 'test_plans' # Default folder for test plans

permissions:
  id-token: write
  contents: write

jobs:
  run-jmeter-tests:
    runs-on: ubuntu-latest

    env:
      JMETER_VERSION: 5.5

    steps:
      # Step 1: Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Install Java 17
      - name: Set up Java 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      # Step 3: Install JMeter
      - name: Install JMeter
        run: |
          wget https://archive.apache.org/dist/jmeter/binaries/apache-jmeter-${{ env.JMETER_VERSION }}.tgz
          tar -xzf apache-jmeter-${{ env.JMETER_VERSION }}.tgz
          sudo mv apache-jmeter-${{ env.JMETER_VERSION }} /opt/jmeter

      # Step 4: Add JMeter to PATH
      - name: Add JMeter to PATH
        run: |
          echo "PATH=$PATH:/opt/jmeter/bin" >> $GITHUB_ENV

      # Step 5: Verify JMeter version
      - name: Verify JMeter version
        run: |
          jmeter --version

      # Step 6: Set Test Folder
      - name: Set Test Folder
        id: set-folder
        run: |
          if [[ -z "${{ github.event.inputs.test-folder }}" ]]; then
            echo "TEST_FOLDER=test_plans" >> $GITHUB_ENV
          else
            echo "TEST_FOLDER=${{ github.event.inputs.test-folder }}" >> $GITHUB_ENV
          fi

      # Step 7: Run all JMeter Test Plans in the Selected Folder
      - name: Run JMeter Test Plans in Selected Folder
        run: |
          echo "Using test folder: $TEST_FOLDER"
          mkdir -p ${{ github.workspace }}/report
          for test_plan in ${{ github.workspace }}/$TEST_FOLDER/*.jmx; do
            echo "Running test plan: $test_plan"
            result_file="${test_plan%.jmx}.jtl"
            jmeter -n -t "$test_plan" -l "$result_file"
            
            # Generate HTML report for each test plan
            report_dir="${test_plan%.jmx}-report"
            jmeter -g "$result_file" -e -o "$report_dir"

            # Move the generated report into the main report folder
            mv "$report_dir" ${{ github.workspace }}/report/$(basename "${test_plan%.jmx}")
          done

      # Step 8: Create Main Index Page
      - name: Create Main Index Page
        run: |
          echo "<html><head><title>JMeter Reports</title></head><body><h1>JMeter Test Reports</h1><ul>" > ${{ github.workspace }}/report/index.html
          for dir in ${{ github.workspace }}/report/*/; do
            if [ -d "$dir" ]; then
              test_plan_name=$(basename "$dir")
              echo "<li><a href='/${test_plan_name}/index.html'>${test_plan_name}</a></li>" >> ${{ github.workspace }}/report/index.html
            fi
          done
          echo "</ul></body></html>" >> ${{ github.workspace }}/report/index.html

      # Step 9: Upload Reports and Main Index Page
      - name: Upload Reports and Main Index Page to GitHub Pages
        run: |
          mkdir -p $GITHUB_WORKSPACE/jmeter_test/reports
          cp -r ${{ github.workspace }}/report/* $GITHUB_WORKSPACE/jmeter_test/reports/

      # Step 10: Upload Artifact (for GitHub Pages)
      - name: Upload Artifact to GitHub Pages
        uses: actions/upload-pages-artifact@v1
        with:
          path: $GITHUB_WORKSPACE/jmeter_test/reports/

      # Step 11: Deploy to GitHub Pages
      - name: Deploy to GitHub Pages
        uses: actions/deploy-pages@v4
