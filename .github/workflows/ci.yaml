name: Run JMeter Tests and Publish JMeter Dashboard Report

on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:

permissions:
  id-token: write
  contents: write

jobs:
  run-jmeter-tests:
    runs-on: ubuntu-latest

    env:
      JMETER_VERSION: 5.5  # Define the JMeter version as a variable

    steps:
      # Step 1: Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Install Java 17
      - name: Set up Java 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      # Step 3: Install JMeter
      - name: Install JMeter
        run: |
          wget https://archive.apache.org/dist/jmeter/binaries/apache-jmeter-${{ env.JMETER_VERSION }}.tgz
          tar -xzf apache-jmeter-${{ env.JMETER_VERSION }}.tgz
          sudo mv apache-jmeter-${{ env.JMETER_VERSION }} /opt/jmeter

      # Step 4: Add JMeter to PATH
      - name: Add JMeter to PATH
        run: |
          echo "PATH=$PATH:/opt/jmeter/bin" >> $GITHUB_ENV

      # Step 5: Verify JMeter version
      - name: Verify JMeter version
        run: |
          jmeter --version

      # Step 6: Run JMeter Test Plan and Generate Results
      - name: Run JMeter Test Plan and Generate Results
        run: |
          jmeter -n -t ${{ github.workspace }}/test_plans/demo.jmx -l ${{ github.workspace }}/test_plans/results.jtl

      # Step 7: Remove existing report folder (if exists) to avoid overwrite error
      - name: Remove existing report folder
        run: |
          rm -rf ${{ github.workspace }}/report

      # Step 8: Generate JMeter Dashboard HTML Report from Results
      - name: Generate JMeter Dashboard Report
        run: |
          jmeter -g ${{ github.workspace }}/test_plans/results.jtl -e -o ${{ github.workspace }}/report

      # Step 9: Ensure index.html exists in the report folder (check folder structure)
      - name: Check if index.html exists
        run: |
          if [ ! -f ${{ github.workspace }}/report/index.html ]; then
            echo "index.html not found in the report folder!"
            exit 1
          fi
          echo "index.html exists, proceeding with artifact upload."

      # Step 10: Upload JMeter Dashboard Report as Artifact (to be used for deployment)
      - name: Upload JMeter Dashboard Report as Artifact
        uses: actions/upload-artifact@v3
        with:
          name: github-pages  # Use the artifact name as 'github-pages' (expected by deploy-pages)
          path: ${{ github.workspace }}/report

  deploy-to-pages:
    runs-on: ubuntu-latest
    needs: run-jmeter-tests
    steps:
      # Step 11: Download JMeter Dashboard Report Artifact
      - name: Download JMeter Dashboard Report Artifact
        uses: actions/download-artifact@v3
        with:
          name: github-pages  # Match the artifact name from the previous step

      # Step 12: Deploy the JMeter Dashboard Report to GitHub Pages
      - name: Deploy JMeter Dashboard Report to GitHub Pages
        uses: actions/deploy-pages@v4
        with:
          branch: gh-pages  # Specify the gh-pages branch for deployment
          folder: ${{ github.workspace }}/report  # Deploy the entire report folder
