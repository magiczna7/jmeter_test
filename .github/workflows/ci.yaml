name: Run JMeter Tests and Deploy to GitHub Pagest

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:
    inputs:
      test-folder:
        description: 'Folder containing test plans to execute (e.g., test_plans/folder1)'
        required: false
        default: 'test_plans'  # Default folder for test plans

permissions:
  id-token: write
  contents: write

jobs:
  run-jmeter-tests:
    runs-on: ubuntu-latest

    env:
      JMETER_VERSION: 5.5

    outputs:
      TIMESTAMP: ${{ steps.set-timestamp.outputs.TIMESTAMP }}  # Corrected output reference

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Java 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Install JMeter
        run: |
          wget https://archive.apache.org/dist/jmeter/binaries/apache-jmeter-${{ env.JMETER_VERSION }}.tgz
          tar -xzf apache-jmeter-${{ env.JMETER_VERSION }}.tgz
          sudo mv apache-jmeter-${{ env.JMETER_VERSION }} /opt/jmeter

      - name: Add JMeter to PATH
        run: |
          echo "PATH=$PATH:/opt/jmeter/bin" >> $GITHUB_ENV

      - name: Verify JMeter version
        run: jmeter --version

      - name: Set Test Folder
        run: |
          if [[ -z "${{ github.event.inputs.test-folder }}" ]]; then
            echo "TEST_FOLDER=test_plans" >> $GITHUB_ENV
          else
            echo "TEST_FOLDER=${{ github.event.inputs.test-folder }}" >> $GITHUB_ENV
          fi

      - name: Set Timestamp
        id: set-timestamp  # Assign an ID to reference outputs
        run: |
          TIMESTAMP=$(date +'%Y-%m-%d_%H-%M-%S')
          echo "TIMESTAMP=$TIMESTAMP" >> $GITHUB_ENV
          echo "TIMESTAMP=$TIMESTAMP" >> $GITHUB_OUTPUT  # Fix: Correctly set job output

      - name: Run JMeter Test Plans in Selected Folder
        run: |
          echo "Using test folder: $TEST_FOLDER"
          mkdir -p ${{ github.workspace }}/report
          for test_plan in ${{ github.workspace }}/$TEST_FOLDER/*.jmx; do
            echo "Running test plan: $test_plan"
            result_file="${test_plan%.jmx}.jtl"
            jmeter -n -t "$test_plan" -l "$result_file"
            
            report_dir="${test_plan%.jmx}-report"
            jmeter -g "$result_file" -e -o "$report_dir"

            mv "$report_dir" ${{ github.workspace }}/report/$(basename "${test_plan%.jmx}")
          done

      - name: Upload All HTML Reports as a Single Artifact
        uses: actions/upload-artifact@v3
        with:
          name: jmeter-reports-${{ env.TIMESTAMP }}  # Use the generated timestamp in artifact name
          path: ${{ github.workspace }}/report
          retention-days: 1

  deploy-to-pages:
    needs: run-jmeter-tests
    runs-on: ubuntu-latest
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Get Timestamp from Previous Job
        run: echo "Using timestamp: ${{ needs.run-jmeter-tests.outputs.TIMESTAMP }}"

      - name: Download JMeter Reports Artifact
        uses: actions/download-artifact@v3
        with:
          name: jmeter-reports-${{ needs.run-jmeter-tests.outputs.TIMESTAMP }}  # Correctly reference the artifact with timestamp
          path: reports

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Create index.html
        run: |
          echo "Creating index.html with links to reports..."
          echo "<html><body><h1>JMeter Test Reports</h1><ul>" > reports/index.html
          for report_dir in reports/*; do
            if [ -d "$report_dir" ]; then
              report_name=$(basename "$report_dir")
              echo "<li><a href=\"$report_name/index.html\">$report_name</a></li>" >> reports/index.html
            fi
          done
          echo "</ul></body></html>" >> reports/index.html

      - name: Upload Reports to GitHub Pages
        uses: actions/upload-pages-artifact@v3
        with:
          path: reports

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
